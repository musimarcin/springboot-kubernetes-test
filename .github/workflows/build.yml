# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

# "**" for selecting all branches
on:
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:
    name: Build movietest-api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./movie-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Build with Maven
        run : mvn verify

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build and PushImage
        run: mvn compile com.google.cloud.tools:jib-maven-plugin:3.4.3:dockerBuild

      - name: Docker Push Image
        run: docker push musimar/movie-api:latest
        #secrets set in github repo settings (security actions) #skip tests because they are already running3



      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
